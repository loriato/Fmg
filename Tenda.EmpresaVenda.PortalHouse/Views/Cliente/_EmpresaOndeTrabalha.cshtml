@using Europa.Extensions
@using Europa.Resources
@model Tenda.EmpresaVenda.ApiService.Models.Cliente.ClienteDto

@{
    ViewBag.Codigo = "EVS05";
}

<div>
    <br />
    <div class="geenFieldSet">
        <div class="panel-heading">
            <div>
                <h3 class="panel-title pull-left">@GlobalMessages.DadosProfissionais</h3>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        @Html.Label(GlobalMessages.Empresa)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.Empresa, new { @class = "form-control form-control-sm", maxlength = 128 })
    </div>
    <div class="col-md-3">
        @Html.Label(GlobalMessages.TempoEmpresa)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.TempoDeEmpresa, new { @class = "form-control form-control-sm text-right", maxlength = 3 })
    </div>
    <div class="col-md-3 form-group">
        @Html.Label(GlobalMessages.DataAdmissao, new { @class = "control-label" })
        <div class="input-group">
            @Html.TextBoxFor(x => x.DadosProfissionaisDto.DataAdmissao, "{0:dd/MM/yyyy}", new { @class = "form-control form-control-sm", datepicker = "datepicker", parent = "#form_cliente", onchange = "Europa.Controllers.Cliente.OnChangeTempoEmpresa(this)" })
            <span class="input-group-append">
                <button class="btn btn-outline-secondary btn-sm py-0" type="button" onclick="Europa.Components.DatePicker.Closest(this)" style="height: 31px;">
                    <img class="color-blue" src="~/Static/europa/css/icons/calendar.svg" />
                </button>
            </span>
        </div>
    </div>
</div>

<div class="row">
    @Html.HiddenFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Id)
    <div class="col-md-2 form-group">
        @Html.Label(GlobalMessages.CEP)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Cep, new { @class = "form-control form-control-sm cep", maxlength = 9, onchange = "Europa.Controllers.Cliente.OnChangeCepEnderecoEmpresa(this)" })
    </div>
    <div class="col-md-4 form-group">
        @Html.Label(GlobalMessages.Endereco)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Logradouro, new { @class = "form-control form-control-sm", maxlength = 60 })
    </div>
    <div class="col-md-2 form-group">
        @Html.Label(GlobalMessages.Numero)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Numero, new { @class = "form-control form-control-sm text-right", maxlength = 10 })
    </div>
    <div class="col-md-4 form-group">
        @Html.Label(GlobalMessages.Complemento)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Complemento, new { @class = "form-control form-control-sm", maxlength = 8 })
    </div>
</div>

<div class="row">
    <div class="col-md-4 form-group">
        @Html.Label(GlobalMessages.Bairro)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Bairro, new { @class = "form-control form-control-sm", maxlength = 40 })
    </div>
    <div class="col-md-3 form-group">
        @Html.Label(GlobalMessages.Cidade)
        @Html.TextBoxFor(x => x.DadosProfissionaisDto.EnderecoEmpresaDto.Cidade, new { @class = "form-control form-control-sm", maxlength = 40 })
    </div>
    <div class="col-md-2 form-group">
        @Html.Label(GlobalMessages.Estado)
        @{
            if (Model.HasValue() && Model.DadosProfissionaisDto.EnderecoEmpresaDto.HasValue() && Model.DadosProfissionaisDto.EnderecoEmpresaDto.Estado.HasValue())
            {
                Html.RenderPartial("_EstadosDropDownList", Tuple.Create("DadosProfissionaisDto.EnderecoEmpresaDto.Estado", Model.DadosProfissionaisDto.EnderecoEmpresaDto.Estado));
            }
            else
            {
                Html.RenderPartial("_EstadosDropDownList", Tuple.Create("DadosProfissionaisDto.EnderecoEmpresaDto.Estado", "Estado"));
            }
        }
    </div>
</div>
