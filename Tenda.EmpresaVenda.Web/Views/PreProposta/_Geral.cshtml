@using Europa.Resources
@using Europa.Extensions
@using Tenda.Domain.Shared
@using Tenda.Domain.EmpresaVenda.Enums

@model Tenda.EmpresaVenda.Web.Models.PrePropostaDTO

@{
    ViewBag.Codigo = "EVS10";
}

@* WARNING: IDS DE CAMPO HIDDEN DESSA FORMA PODEM CONFLITAR COM OS IDS DE INPUTS *@
@Html.HiddenFor(reg => reg.PodeManterAssociacoes)
@Html.HiddenFor(reg => reg.PreProposta.Id)
@Html.HiddenFor(reg => reg.PreProposta.Cliente.Id)
@Html.HiddenFor(reg => reg.PreProposta.BreveLancamento.Id)
@Html.HiddenFor(reg => reg.PreProposta.BreveLancamento.Nome)
@Html.HiddenFor(reg => reg.PreProposta.PontoVenda.Id)
@Html.HiddenFor(x => x.PreProposta.Cliente.Id)
@Html.HiddenFor(x => x.PreProposta.IdTorre)
@Html.HiddenFor(x => x.PreProposta.IdSuat)
@Html.HiddenFor(x => x.PreProposta.IdUnidadeSuat)
@*@Html.HiddenFor(x => x.PreProposta.Cliente.NomeCompleto)*@
<div class="col-md-24">
    <div class="col-md-4 form-group">
        @Html.Label(GlobalMessages.Codigo, new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.Codigo, new { @class = "form-control", @maxlength = 30, @readonly = "readonly" })
    </div>
    <div class="col-md-7 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.Cliente + " *", new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.Cliente.NomeCompleto, new { @class = "form-control", @readonly = "readonly", data_entity = "Cliente", data_id = Model.PreProposta.Cliente?.Id })
    </div>
    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.DataElaboracao, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.PreProposta.DataElaboracao, "{0:dd/MM/yyyy HH:mm}", new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.Status, new { @class = "control-label" })
        @Html.TextBoxFor(x => x.SituacaoPrepropostaSuatEvs, new { @class = "form-control", @readonly = "readonly" })
    </div>
</div>
<div class="col-md-24">
    <div class="col-md-4 form-group">
        @Html.Label(GlobalMessages.EmpresaVenda, new { @class = "control-label" })
        @Html.HiddenFor(x => x.PreProposta.EmpresaVenda.Id)
        @Html.TextBoxFor(reg => reg.PreProposta.EmpresaVenda.NomeFantasia, new { @class = "form-control", @maxlength = 30, @readonly = "readonly" })
    </div>
    <div class="col-md-7 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.OrigemCliente, new { @class = "control-label" })
        <div class="input-group">
            @Html.DropDownListFor(x => x.PreProposta.OrigemCliente, EnumHelper.GetSelectList(typeof(Tenda.Domain.EmpresaVenda.Enums.TipoOrigemCliente)), " ", new { @class = "form-control", @readonly = "readonly" })
            <span class="input-group-btn">
                <button id="span_origem_cliente" type="button" class="btn control-label" onclick="Europa.Controllers.PreProposta.AbrirModalOrigemIndicacao()" style="border: 1px solid #979797; height: 28px;">
                    <i class="fa fa-eye"></i>
                </button>
            </span>
        </div>
    </div>
    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.Corretor, new { @class = "control-label" })
        @Html.HiddenFor(x => x.PreProposta.Corretor.Id)
        @Html.TextBoxFor(x => x.PreProposta.Corretor.Nome, new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.Elaborador, new { @class = "control-label" })
        @Html.HiddenFor(x => x.PreProposta.Elaborador.Id)
        @Html.TextBoxFor(x => x.PreProposta.Elaborador.Nome, new { @class = "form-control", @readonly = "readonly" })
    </div>
</div>
<div class="col-md-24">
    <div class="col-md-6 form-group">
        @Html.Label(GlobalMessages.PontoVenda + " *", new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.PontoVenda.Nome, new { @class = "form-control", @readonly = "readonly" })
    </div>

    <div class="col-md-5 col-md-offset-1">
        @if (Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado)
        {

            @Html.Label(GlobalMessages.Produto, new { @class = "control-label" })
            <select id="autocomplete_breve_lancamento" name="autocomplete_breve_lancamento" class="select2-container form-control"></select>
        }
        else if (Model.PreProposta.BreveLancamento.HasValue() && Model.PreProposta.BreveLancamento.Empreendimento.HasValue())
        {
            <div>
                @Html.Label(GlobalMessages.EmpresasVendas_Produto, new { @class = "control-label" })
            </div>
            @Html.TextBoxFor(x => x.PreProposta.BreveLancamento.Nome, new { @class = "form-control" })
        }
        else if (Model.PreProposta.SituacaoProposta == SituacaoProposta.EmElaboracao ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseSimplificada ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseSimplificada ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.DocsInsuficientesSimplificado ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAuditoria ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AnaliseSimplificadaAprovada ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.Reprovada ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.Condicionada ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.SICAQComErro)
        {
            //@Html.Label(GlobalMessages.Regiao + " *", new { @class = "control-label" })
            //@Html.TextBoxFor(reg => reg.PreProposta.Regiao.Cidade, new { @class = "form-control" })
        }
        else
        {
            <div>
                @Html.Label(GlobalMessages.EmpresasVendas_Produto, new { @class = "control-label" })
            </div>
            @Html.TextBoxFor(x => x.PreProposta.BreveLancamento.Nome, new { @class = "form-control" })
        }

    </div>

    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.Viabilizador, new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.Viabilizador.Nome, new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.UltimoCCAResponsavel, new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.UltimoCCA, new { @class = "form-control", @readonly = "readonly" })
    </div>
</div>

<div class="col-md-24">
    @if (Model.PreProposta.IdUnidadeSuat.HasValue())
    {
        <div class="col-md-12">
            <div class="col-md-24 form-group">
                @Html.Label("Referência Proposta SUAT", new { @class = "control-label" })
                @Html.TextBoxFor(reg => reg.PreProposta.IdentificadorUnidadeSuat, new { @class = "form-control", @readonly = "readonly", data_entity = "Proposta", data_id = Model.PreProposta.IdUnidadeSuat })
            </div>
        </div>
    }
    else
    {
        <div class="col-md-6">
            @if (Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado)
            {
                @Html.Label(GlobalMessages.Torre, new { @class = "control-label" })
                <select id="autocomplete_torre" name="autocomplete_torre" class="select2-container form-control"></select>
            }
            else if (Model.PreProposta.BreveLancamento.HasValue() && Model.PreProposta.BreveLancamento.Empreendimento.HasValue())
            {
                @Html.Label(GlobalMessages.Torre, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.PreProposta.NomeTorre, new { @class = "form-control", @readonly = "readonly" })
            }
            else if (Model.PreProposta.SituacaoProposta == SituacaoProposta.EmElaboracao ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseSimplificada ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseSimplificada ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.DocsInsuficientesSimplificado ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAuditoria ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.AnaliseSimplificadaAprovada ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.Reprovada ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.Condicionada ||
                   Model.PreProposta.SituacaoProposta == SituacaoProposta.SICAQComErro)
            {
                @*@Html.Label(GlobalMessages.BreveLancamento)
                    <div class="col-md-24">
                        <div class="col-md-12">
                            @Html.RadioButtonFor(reg => reg.PreProposta.IsBreveLancamento, true, new { id = "PreProposta_IsBreveLancamento_Sim", onclick = "Europa.Controllers.PreProposta.OnSelectBreveLancamento(1)" }) <label class="control -label" for="PreProposta_IsBreveLancamento_Sim">@GlobalMessages.Sim</label>
                        </div>
                        <div class="col-md-12">
                            @Html.RadioButtonFor(reg => reg.PreProposta.IsBreveLancamento, false, new { id = "PreProposta_IsBreveLancamento_Nao", onclick = "Europa.Controllers.PreProposta.OnSelectBreveLancamento(0)" }) <label class="control-label" for="PreProposta_IsBreveLancamento_Nao">@GlobalMessages.Nao</label>
                        </div>
                    </div>*@
            }
            else
            {
                @Html.Label(GlobalMessages.Torre, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.PreProposta.NomeTorre, new { @class = "form-control", @readonly = "readonly" })
            }
        </div>

        <div class="col-md-5 col-md-offset-1">

            @if ((Model.PreProposta.BreveLancamento.HasValue() && Model.PreProposta.BreveLancamento.Empreendimento.HasValue()) || Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado)
            {
                @Html.Label(GlobalMessages.Observacao + " da Torre", new { @class = "control-label" })
                @Html.TextBoxFor(reg => reg.PreProposta.ObservacaoTorre, new { @class = "form-control", @readonly = "readonly" })
            }
            else
            {
                var breveLancamento = Model.PreProposta.BreveLancamento.HasValue() ? Model.PreProposta.BreveLancamento.Nome : "";
                @Html.Label("Escolha o Produto", new { @class = "control-label" })
                @Html.TextBox("BreveLancamento", breveLancamento, new { @class = "form-control", @readonly = "readonly" })
            }

        </div>
    }

    <div class="col-md-5 col-md-offset-1 form-group">
        @Html.Label(GlobalMessages.ParcelaSolicitada, new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.PreProposta.ParcelaSolicitada, new { @class = "form-control text-right dinheiro", @readonly = "readonly", Value = Model.PreProposta.ParcelaSolicitada.ToString("F") })
    </div>

    <div class="col-md-5 col-md-offset-1 form-group">
        @if (Model.PreProposta.ParcelaAprovada.HasValue())
        {
            @Html.Label(GlobalMessages.ParcelaAprovada, new { @class = "control-label" })
            @Html.TextBoxFor(reg => reg.PreProposta.ParcelaAprovada, new { @class = "form-control text-right dinheiro", @readonly = "readonly", Value = Model.PreProposta.ParcelaAprovada.ToString("F") })
        }
        else
        {
            @Html.Label(GlobalMessages.ParcelaAprovada + " Prévia", new { @class = "control-label" })
            @Html.TextBoxFor(reg => reg.PreProposta.ParcelaAprovadaPrevio, new { @class = "form-control text-right dinheiro", @readonly = "readonly", Value = Model.PreProposta.ParcelaAprovadaPrevio.ToString("F") })
        }
    </div>

</div>

<div class="col-md-24">
    <div class="col-md-8 form-group">
        @Html.Label(GlobalMessages.Endereco, new { @class = "control-label" })
        @Html.TextBoxFor(reg => reg.EnderecoBreveLancamento, new { @class = "form-control", @maxlength = 128, @readonly = "readonly" })
    </div>
    <div class="col-md-3 col-md-offset-1">
        @Html.Label(GlobalMessages.Faixa + "1,5 EV?", new { @class = "control-label" })
        <div class="col-md-24">
            <div class="col-md-12">
                @Html.RadioButtonFor(reg => reg.PreProposta.FaixaEv, true, new { id = "PreProposta_FaixaEv_Sim" }) <label class="control -label" for="PreProposta_FaixaEv_Sim">@GlobalMessages.Sim</label>
            </div>
            <div class="col-md-12">
                @Html.RadioButtonFor(reg => reg.PreProposta.FaixaEv, false, new { id = "PreProposta_FaixaEv_Nao" }) <label class="control-label" for="PreProposta_FaixaEv_Nao">@GlobalMessages.Nao</label>
            </div>
        </div>
    </div>
    @Html.HiddenFor(reg => reg.PreProposta.FaixaUmMeio)
    <div id="area_totais">
        <div class="col-md-3 col-md-offset-1">
            @Html.Label(GlobalMessages.TotalDetalhamentoFinanceiro, new { @class = "control-label" })
            @Html.TextBoxFor(reg => reg.PreProposta.TotalDetalhamentoFinanceiro, new { @class = "form-control text-right dinheiro", maxlength = 13, @readonly = "readonly", Value = Model.PreProposta.TotalDetalhamentoFinanceiro.ToString("F") })
        </div>
        <div class="col-md-3 col-md-offset-1">
            @Html.Label(GlobalMessages.TotalItbiEmolumento, new { @class = "control-label" })
            @Html.TextBoxFor(reg => reg.PreProposta.TotalItbiEmolumento, new { @class = "form-control text-right dinheiro", @maxlength = 13, Value = Model.PreProposta.TotalItbiEmolumento.ToString("F"), @readonly = "readonly" })
        </div>
        <div class="col-md-3 col-md-offset-1">
            @Html.Label(GlobalMessages.Total, new { @class = "control-label" })
            @Html.TextBoxFor(reg => reg.PreProposta.Valor, new { @class = "form-control text-right dinheiro", @maxlength = 13, Value = Model.PreProposta.Valor.ToString("F"), @readonly = "readonly" })
        </div>
        <script>
            Europa.String.FormatAsMoney($('#PreProposta_TotalDetalhamentoFinanceiro').val());
            Europa.String.FormatAsMoney($('#PreProposta_TotalItbiEmolumento').val());
            Europa.String.FormatAsMoney($('#PreProposta_Valor').val());
            Europa.String.FormatAsMoney($('#PreProposta_ParcelaAprovada').val());
        </script>
    </div>
</div>
@{
    Html.RenderPartial("_ModalOrigemIndicacao");
}