@using Europa.Extensions
@using Europa.Resources
@using Tenda.Domain.EmpresaVenda.Enums
@using Tenda.EmpresaVenda.Web.Models.Application
@model Tenda.EmpresaVenda.Web.Models.PrePropostaDTO

@{
    ViewBag.Codigo = "EVS10";
    ViewBag.Title = ApplicationInfo.TituloUnidadeFuncional(ViewBag.Codigo);
    var exibeAvalista = Model.AvalistaDTO != null && Model.AvalistaDTO.Avalista != null && Model.AvalistaDTO.Avalista.Id > 0;

}

<style>
    #titlebar-name {
        padding: 0px 0px 0px 5px !important;
    }

    #titlebar-name-target {
        font-size: 13px;
        font-weight: bolder;
        text-transform: uppercase;
    }
</style>
@* A ordem dos elementos abaixo importa. Existe um acoplamento inicial entre pre-proposta e os demais componentes *@
<script type="text/javascript" src="~/static/projeto/pre-proposta/pre-proposta.js"></script>
<script type="text/javascript" src="~/static/projeto/pre-proposta/detalhamento-financeiro.js"></script>
<script type="text/javascript" src="~/static/projeto/pre-proposta/itbi-emolumento.js"></script>
<script type="text/javascript" src="~/static/projeto/pre-proposta/proponente.js"></script>
<script type="text/javascript" src="~/static/projeto/pre-proposta/documento-proponente.js"></script>

@*<script type="text/javascript" src="~/Static/projeto/pre-proposta/modal-simulacao.js"></script>*@ 

<script type="text/javascript" src="~/static/projeto/pre-proposta-workflow/pre-proposta-workflow.js"></script>

<script>
    // URLs
    Europa.Controllers.PreProposta.UrlIndex = '@Url.Action("Index", "PreProposta")';
    Europa.Controllers.PreProposta.UrlBuscarCliente = '@Url.Action("BuscarDadosCliente", "PreProposta")';
    Europa.Controllers.PreProposta.UrlProponenteDropDown = '@Url.Action("RenderPropoponenteDropDownList", "PreProposta")';
    Europa.Controllers.PreProposta.UrlTotalFinanceiro = '@Url.Action("RenderTotalFinanceiro", "PreProposta")';
    Europa.Controllers.PreProposta.UrlDefinirUnidadePreProposta = '@Url.Action("DefinirUnidadePreProposta", "PreProposta")';
    Europa.Controllers.PreProposta.UrlIntegrarPreProposta = '@Url.Action("IntegrarPrePropostaSUAT", "PreProposta")';
    Europa.Controllers.PreProposta.UrlHistorico = '@Url.Action("BuscarHistoricoPreProposta", "PreProposta")';
    Europa.Controllers.PreProposta.UrlBaixarTodosDocumentos = '@Url.Action("BaixarTodosDocumentos", "PreProposta")';
    Europa.Controllers.PreProposta.UrlBaixarFormularios = '@Url.Action("BaixarFormularios", "DocumentoFormulario")';
    Europa.Controllers.PreProposta.UrlPreBaixarBoleto = '@Url.Action("PreBaixarBoleto", "PreProposta")';
    Europa.Controllers.PreProposta.UrlPreBaixarContrato = '@Url.Action("PreBaixarContrato", "PreProposta")';
    Europa.Controllers.PreProposta.UrlBaixarBoleto = '@Url.Action("BaixarBoleto", "PreProposta")';
    Europa.Controllers.PreProposta.UrlBaixarContrato = '@Url.Action("BaixarContrato", "PreProposta")';
    Europa.Controllers.PreProposta.UrlSalvarBreveLancamento = '@Url.Action("SalvarBreveLancamento", "PreProposta")';

    Europa.Controllers.PrePropostaWorkflow.UrlCancelar = '@Url.Action("Cancelar", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlFinalizar = '@Url.Action("Finalizar", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlAprovar = '@Url.Action("Aprovar", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlRetroceder = '@Url.Action("Retroceder", "PrePropostaWorkflow")';

    Europa.Controllers.PrePropostaWorkflow.UrlAguardarFluxo = '@Url.Action("AguardarFluxo", "PrePropostaWorkflow")';

    Europa.Controllers.PrePropostaWorkflow.UrlAguardandoIntegracao = '@Url.Action("AguardandoIntegracao", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlAguardandoAnaliseCompleta = '@Url.Action("AguardandoAnaliseCompleta", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlEmAnaliseCompleta = '@Url.Action("EmAnaliseCompleta", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlAguardandoAuditoria = '@Url.Action("AguardandoAuditoria", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlFluxoEnviado = '@Url.Action("FluxoEnviado", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlRetornoAuditoria = '@Url.Action("RetornoAuditoria", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlDocsInsuficientes = '@Url.Action("DocsInsuficientes", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlAnaliseCompletaAprovada = '@Url.Action("AnaliseCompletaAprovada", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlReenviarAnaliseCompletaAprovada = '@Url.Action("ReenviarAnaliseCompletaAprovada", "PrePropostaWorkflow")';
    Europa.Controllers.PrePropostaWorkflow.UrlAnaliseSimplificadaAprovada = '@Url.Action("Aprovar", "PrePropostaWorkflow")';

    Europa.Controllers.PreProposta.UrlValidarEmpreendimento = '@Url.Action("ValidarEmpreendimento", "PreProposta")';
    Europa.Controllers.PreProposta.UrlReenviarSuat = '@Url.Action("SalvarNovoBreveLancamento", "PreProposta")';
    Europa.Controllers.PreProposta.UrlMudarFatorSocial = '@Url.Action("MudarFatorSocial", "PreProposta")';

    Europa.Controllers.PreProposta.UrlResultadoSimulacao = '@Url.Action("ResultadoSimulacao", "PreProposta")';
    Europa.Controllers.PreProposta.UrlAtualizarResultadosSimulacao='@Url.Action("AtualizarResultadosSimulacao", "PreProposta")';

    Europa.Controllers.PreProposta.UrlMontarUrlSimulador = '@Url.Action("MontarUrlSimulador","PreProposta")';
    Europa.Controllers.PreProposta.UrlDetalhamentoFinanceiroBySimulador = '@Url.Action("DetalhamentoFinanceiroBySimulador","PreProposta")';

    Europa.Controllers.PreProposta.Permissoes = {
        DetalhamentoFinanceiroManual:'@SessionAttributes.Current().HasPermission(ViewBag.Codigo, "DetalhamentoFinanceiroManual").ToString().ToLower()'=='true',
    }
</script>

@{
    Model.PodeManterAssociacoes = Model.PreProposta != null &&
        Model.PreProposta.Id > 0 &&
        (SituacaoProposta.EmElaboracao == Model.PreProposta.SituacaoProposta ||
          SituacaoProposta.DocsInsuficientesSimplificado == Model.PreProposta.SituacaoProposta ||
          SituacaoProposta.FluxoEnviado == Model.PreProposta.SituacaoProposta ||
          SituacaoProposta.AguardandoIntegracao == Model.PreProposta.SituacaoProposta);
}

<div id="titlebar-name">
    @if (Model.PreProposta.Codigo.IsEmpty() || Model.PreProposta.BreveLancamento == null)
    {
        <div class="pull-left">@ViewBag.Title</div>
    }
    else
    {
        <div class="pull-left" style="font-size: 9pt; margin-top: -5px; margin-bottom:-5px">
            <div>@Model.PreProposta.Codigo</div>
            <div>@Model.PreProposta.Cliente.NomeCompleto</div>
        </div>
    }
</div>
<div id="titlebar-buttons">
    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoIntegracao)
    {
        <button id="btn_retornar" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.ReenviarAnaliseCompletaAprovada()">
            <i class="fa fa-paper-plane"></i>  @GlobalMessages.ReenviarParaAnalise
        </button>
    }

    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "Alterar"))
    {
        if (
                (Model.PreProposta.Id > 0 &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.Integrada &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.Cancelada &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.AguardandoAnaliseSimplificada &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.AguardandoAnaliseCompleta &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.EmAnaliseSimplificada &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.EmAnaliseCompleta &&
                    Model.PreProposta.SituacaoProposta != SituacaoProposta.AnaliseSimplificadaAprovada) ||
            ((Model.PrePropostaReintegrada &&
            Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.AguardandoIntegracao) ||
           (Model.PreProposta.PassoAtualSuat == "Prop. Cancelada" &&
           Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.Integrada)))
        {
            <button id="btn_fator_social" class="btn btn-default" type="submit" onclick="Europa.Controllers.PreProposta.AbrirModalFatorSocial()">
                <i class="fa fa-exchange"></i> @GlobalMessages.Alterar @GlobalMessages.FatorSocial
            </button>
        }
    }

    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseCompleta && false)
    {
        if (SessionAttributes.Current().HasPermission("EVS12", "EnviarAuditoria"))
        {
            <button id="btn_auditar" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AguardandoAuditoria()">
                <i class="fa fa-archive"></i>@GlobalMessages.Auditar
            </button>
        }
    }

    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAuditoria)
    {
        if (SessionAttributes.Current().HasPermission("EVS12", "RetornoAuditoria"))
        {
            <button id="btn_retornar" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.RetornoAuditoria()">
                <i class="fa fa-paper-plane"></i>@GlobalMessages.RetornoAuditoria
            </button>
        }
    }

    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseCompleta && false)
    {
        <button id="btn_retornar" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.DocsInsuficientes()">
            <i class="fa fa-paper-plane"></i>@GlobalMessages.Pendenciar
        </button>
    }

    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado)
    {
        <button id="btn_pendernciar_fluxo_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AguardarFluxo()">
            @GlobalMessages.FluxoPendente
        </button>
    }

    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() && Model.SituacaoAnterior.HasValue() &&
            Model.SituacaoAnterior == SituacaoProposta.AnaliseSimplificadaAprovada &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.SICAQComErro)
    {
        <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseSimplificadaAprovada()">
            @GlobalMessages.Retornar
        </button>
    }
    else if (Model.PreProposta.Id > 0 &&
           Model.PreProposta.Codigo.HasValue() &&
           Model.PreProposta.SituacaoProposta == SituacaoProposta.SICAQComErro)
    {
        <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseCompletaAprovada()">
            @GlobalMessages.Aprovar
        </button>
    }
    @if (SessionAttributes.Current().HasPermission("EVS10", "RetornarSituacaoReprovada"))
    {
        if (Model.PreProposta.Id > 0 &&
                Model.PreProposta.Codigo.HasValue() && Model.SituacaoAnterior.HasValue() &&
                Model.SituacaoAnterior == SituacaoProposta.AnaliseSimplificadaAprovada &&
                Model.PreProposta.SituacaoProposta == SituacaoProposta.Reprovada)
        {
            <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseSimplificadaAprovada()">
                Refazer Análise SICAQ
            </button>
        }
        else if (Model.PreProposta.Id > 0 &&
               Model.PreProposta.Codigo.HasValue() &&
               Model.SituacaoAnterior == SituacaoProposta.AnaliseCompletaAprovada &&
               Model.PreProposta.SituacaoProposta == SituacaoProposta.Reprovada)
        {
            <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseCompletaAprovada()">
                Refazer Análise SICAQ
            </button>
        }
    }
    @if (SessionAttributes.Current().HasPermission("EVS10", "RetornarSituacaoCondicionada"))
    {
        if (Model.PreProposta.Id > 0 &&
                Model.PreProposta.Codigo.HasValue() && Model.SituacaoAnterior.HasValue() &&
                Model.SituacaoAnterior == SituacaoProposta.AnaliseSimplificadaAprovada &&
                Model.PreProposta.SituacaoProposta == SituacaoProposta.Condicionada)
        {
            <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseSimplificadaAprovada()">
                Refazer Análise SICAQ
            </button>
        }
        else if (Model.PreProposta.Id > 0 &&
               Model.PreProposta.Codigo.HasValue() &&
               Model.SituacaoAnterior == SituacaoProposta.AnaliseCompletaAprovada &&
               Model.PreProposta.SituacaoProposta == SituacaoProposta.Condicionada)
        {
            <button id="btn_aprovar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AnaliseCompletaAprovada()">
                Refazer Análise SICAQ
            </button>
        }
    }
    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado)
    {
        if (Model.hasAprovedDocs)
        {
            <button id="btn_finalizar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AguardandoIntegracao()">
                @GlobalMessages.FluxoAprovado
            </button>
        }
        else
        {
            <button id="btn_finalizar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.AguardandoAnaliseCompleta()">
                @GlobalMessages.FluxoAprovado
            </button>
        }

    }
    @if (Model.PreProposta.Id > 0 &&
            Model.PreProposta.Codigo.HasValue() &&
            (Model.PreProposta.SituacaoProposta == SituacaoProposta.FluxoEnviado ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.SICAQComErro ||
            Model.PreProposta.SituacaoProposta == SituacaoProposta.AnaliseSimplificadaAprovada))
    {
        <button id="btn_cancelar_pre_proposta" class="btn btn-default" type="button" onclick="Europa.Controllers.PreProposta.Cancelar()">
            <i class="fa fa-ban"></i> @GlobalMessages.CancelarPreProposta
        </button>
    }

    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "BaixarTodosDocumentos") &&
             Model.PreProposta.Id > 0 &&
             Model.PossuiFormulario &&
             Model.PreProposta.Codigo.HasValue() &&
             (Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseSimplificada ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseCompleta ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseCompleta ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseSimplificada ||
             Model.PreProposta.SituacaoProposta != SituacaoProposta.Retorno))
    {
        <button id="btn_baixar_todos_documentos" class="btn btn-default" type="button"
                onclick="Europa.Controllers.PreProposta.BaixarFormularios()">
            <i class="fa fa-download"></i> @GlobalMessages.BaixarFormularios
        </button>
    }

    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "BaixarTodosDocumentos") &&
             Model.PreProposta.Id > 0 &&
             Model.PreProposta.Codigo.HasValue() &&
             (Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseSimplificada ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.AguardandoAnaliseCompleta ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseCompleta ||
             Model.PreProposta.SituacaoProposta == SituacaoProposta.EmAnaliseSimplificada ||
             Model.PreProposta.SituacaoProposta != SituacaoProposta.Retorno)
             )
    {
        <button id="btn_baixar_todos_documentos" class="btn btn-default" type="button"
                onclick="Europa.Controllers.PreProposta.BaixarTodosDocumentos()">
            <i class="fa fa-download"></i> @GlobalMessages.BaixarTodosDocumentos
        </button>
    }
    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "ReintegrarPrePropostaSUAT"))
    {
        if ((Model.PrePropostaReintegrada && Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.AguardandoIntegracao) ||
            (Model.PreProposta.PassoAtualSuat == "Prop. Cancelada" && Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.Integrada))
        {
            <button id="btn_reenviar_suat" title="@GlobalMessages.ReintegrarPreProposta" class="btn btn-default" value="false" type="button" onclick="Europa.Controllers.PreProposta.AbrirModalReintegrarPrePropostaConfirma()">
                <i class="fa fa-send" aria-hidden="true"></i>  @GlobalMessages.ReintegrarPreProposta
            </button>
        }
    }
    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "ConsultarEstoque") &&
        Model.PreProposta.BreveLancamento.HasValue() &&
         Model.PreProposta.BreveLancamento.Empreendimento.HasValue() &&
         Model.PreProposta.SituacaoProposta.HasValue() &&
         Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.AguardandoIntegracao)
    {
        if (!Model.PrePropostaReintegrada)
        {
            <button class="btn btn-default" title="@GlobalMessages.IntegrarPreProposta" type="button" onclick="Europa.Controllers.PreProposta.AbrirModalIntegrarPrePropostaConfirma()">
                <i class="fa fa-send-o" aria-hidden="true"></i> @GlobalMessages.IntegrarPreProposta
            </button>
        }
        if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "VisualizarLogIntegracao"))
        {
            <button class="btn btn-default" title="@GlobalMessages.LogDeIntegracao" type="button" onclick="Europa.Components.LogIntegracaoModal.AbrirModal()">
                <i class="fa fa-list-ul" aria-hidden="true"></i> @GlobalMessages.LogDeIntegracao
            </button>
        }

    }

    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "VisualizarHistoricoPreProposta"))
    {
        <button class="btn btn-default" title="@GlobalMessages.HistoricoDaPreProposta" type="button" onclick="Europa.Controllers.PreProposta.AbrirModalHistorico()">
            <i class="fa fa-history" aria-hidden="true"></i> @GlobalMessages.HistoricoDaPreProposta
        </button>
    }
    @if (Model.PreProposta.IdSuat > 0)
    {
        <button id="btn_imprimir_contrato" class="btn btn-default" type="submit" onclick="Europa.Controllers.PreProposta.BaixarContrato()">
            <i class="fa fa-print"></i> @GlobalMessages.ImprimirContrato
        </button>
        <button id="btn_baixar_boleto" class="btn btn-default" type="submit" onclick="Europa.Controllers.PreProposta.BaixarBoleto()">
            <i class="fa fa-barcode"></i> @GlobalMessages.BaixarBoleto
        </button>
    }

    @if (exibeAvalista && !Model.PermissaoAvalistaPreChaves || Model.KitCompleto && !Model.PermissaoAvalistaPreChaves || Model.PossuiPosChaves)
    {
        <button id="btn_simulador_resultados" class="btn btn-default" type="button"
                onclick="Europa.Controllers.PreProposta.ModalAvalista.ActionAvalista()">
            <i class="fa fa-archive"></i> @GlobalMessages.Avalista
        </button>
    }

    @if (SessionAttributes.Current().HasPermission(ViewBag.Codigo, "Simulacao"))
    {
        <button id="btn_simulador_resultados" class="btn btn-default" type="button"
                onclick="Europa.Controllers.PreProposta.ResultadosSimulador()">
            <i class="fa fa-archive"></i> @GlobalMessages.SimuladorPPRAtual
        </button>
    }

    @if (Model.PreProposta.SituacaoProposta.Value == SituacaoProposta.EmAnaliseSimplificada)
    {
        <button id="btn_formulario" class="btn btn-default" type="button"
                onclick="Europa.Controllers.PreProposta.AbrirModalFormulario()">
            <i class="fa fa-archive"></i> @GlobalMessages.Formularios
        </button>
    }
</div>
@Html.Hidden("modal-switch")
@Html.HiddenFor(reg => reg.PreProposta.SituacaoProposta, new { @Value = (Model.PreProposta.SituacaoProposta==null?0: (int)Model.PreProposta.SituacaoProposta) })
@Html.HiddenFor(x => x.PreProposta.EmpresaVenda.Estado, new { id="regional"})
@Html.HiddenFor(x=>x.PreProposta.NomeTorre)

<form id="form_pre_proposta">
    <div class="col-md-24">
        <fieldset id="fieldset_pre_proposta">
            <div class="col-md-24" id="area_geral">
                @{
                    Html.RenderPartial("_Geral", Model);
                }
            </div>
            <div class="col-md-24" id="area_detalhamento_financeiro">
                @{
                    Html.RenderPartial("_DetalhamentoFinanceiro", Model);
                }
            </div>
            <div class="col-md-24" id="area_itbi_emolumento">
                @{
                    Html.RenderPartial("_ItbiEmolumento", Model);
                }
            </div>
            <div class="col-md-24" id="area_proponente">
                @{
                    Html.RenderPartial("_Proponente", Model);
                }
            </div>
            <div class="col-md-24" id="area_documento_proponente">
                @{
                    Html.RenderPartial("_DocumentoProponente", Model);
                }
            </div>
        </fieldset>
    </div>
</form>
<form id="Exportar"></form>
@{
    Html.RenderPartial("~/Views/PreProposta/_ModalLogIntegracao.cshtml");
    Html.RenderPartial("~/Views/Cliente/_ModalBuscaCliente.cshtml");
    if (Model.PreProposta.BreveLancamento.HasValue())
    {
        Html.RenderPartial("~/Views/Shared/Componentes/_ModalConsultaEstoqueEmpreendimento.cshtml", Model.PreProposta.BreveLancamento);
    }
    Html.RenderPartial("~/Views/Shared/Componentes/_ModalConsultaEstoqueUnidade.cshtml");
    Html.RenderPartial("~/Views/PreProposta/_ModalHistoricoPreProposta.cshtml");
    Html.RenderPartial("~/Views/PreProposta/_ModalAvalistaPreProposta.cshtml");
    Html.RenderPartial("~/Views/PreProposta/_ModalReenviarSuat.cshtml");
    Html.RenderPartial("_FatorSocialModal");
    Html.RenderPartial("_FatorSocialConfirmaModal");
    Html.RenderPartial("~/Views/Simulador/_ModalSimulacao.cshtml", Model);
    Html.RenderPartial("~/Views/DocumentoFormulario/_ModalFormulario.cshtml");
}
