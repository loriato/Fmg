@using Europa.Extensions
@using Europa.Resources
@using Tenda.Domain.EmpresaVenda.Enums
@using Tenda.EmpresaVenda.Domain.Commons
@using Tenda.EmpresaVenda.Web.Models.Application
@model Tenda.EmpresaVenda.Domain.Repository.Models.PontuacaoFidelidadeDTO
@{
    ViewBag.Codigo = "PAG06";
    ViewBag.Title = ApplicationInfo.TituloUnidadeFuncional(ViewBag.Codigo);

    var permissaoAdd = SessionAttributes.Current().HasPermission(ViewBag.Codigo, "Incluir");
    var permissaoAlterar = SessionAttributes.Current().HasPermission(ViewBag.Codigo, "Atualizar");
    var novo = ViewBag.Novo != null && ViewBag.Novo;

    var habilitarEdicao = (Model.Id == 0 && permissaoAdd) || (Model.Id > 0 && (permissaoAlterar || (novo && permissaoAdd)));
    var read = Model.Id > 0 && !novo && Model.Situacao != SituacaoPontuacaoFidelidade.Rascunho;

}

<script type="text/javascript" src="~/Static/projeto/pontuacao-fidelidade/matriz-pontuacao-fidelidade.js"></script>
<script>
    Europa.Controllers.MatrizPontuacaoFidelidade.Url = {
        Index: '@(Url.Action("MatrizPontuacaoFidelidade", "PontuacaoFidelidade"))',
        Listar: '@Url.Action("BuscarMatriz", "PontuacaoFidelidade")',
        Salvar: '@(Url.Action("SalvarMatriz", "PontuacaoFidelidade"))',
        GerarExcel: '@(Url.Action("GerarExcel", "PontuacaoFidelidade"))',
        DownloadPdfPontuacaoFidelidadeEvs : '@Url.Action("DownloadPdfPontuacaoFidelidadeEvs", "PontuacaoFidelidade")'
    };

    Europa.Controllers.MatrizPontuacaoFidelidade.BuscarAtivoAtual = @(ViewBag.PorUltimaAtualizacao.ToString().ToLower());
	Europa.Controllers.MatrizPontuacaoFidelidade.Editavel = @(((Model.Situacao == SituacaoPontuacaoFidelidade.Rascunho || ViewBag.Novo) && habilitarEdicao).ToString().ToLower());
    Europa.Controllers.MatrizPontuacaoFidelidade.PreCarregado = @((ViewBag.Novo).ToString().ToLower());

    Europa.Controllers.MatrizPontuacaoFidelidade.IdEmpresasVenda= @Html.Raw(Json.Encode(Model.IdEmpresasVenda));
    Europa.Controllers.MatrizPontuacaoFidelidade.IdEmpreendimentos = @Html.Raw(Json.Encode(Model.IdEmpreendimentos));

    Europa.Controllers.MatrizPontuacaoFidelidade.QuantidadesMinimas = @Html.Raw(Model.QuantidadesMinimas);

</script>
<link href="~/Static/projeto/regra-comissao-padrao/matriz-regra-comissao-padrao.css" rel="stylesheet" />
<link href="~/Static/projeto/grupo-cca/grupo-cca.css" rel="stylesheet" />

<div id="titlebar-name">
    @GlobalMessages.PontuacaoFidelidade
</div>
<div id="titlebar-buttons">
    <div class="pull-right" style="width: 100%">
        <button class="btn btn-default"
                onClick="location.href='@Url.Action("Index", "PontuacaoFidelidade")'">
            <i class="fa fa-chevron-left"></i> @GlobalMessages.Voltar
        </button>
        @if (Model.Situacao == SituacaoPontuacaoFidelidade.Rascunho)
        {
            <button id="btn_salvar" class="btn btn-default" onClick="Europa.Controllers.MatrizPontuacaoFidelidade.Salvar()">
                <i class="fa fa-save"></i> @GlobalMessages.Salvar
            </button>
            <button id="btn_download" class="btn btn-default hidden"
                    onClick="Europa.Controllers.MatrizPontuacaoFidelidade.GerarExcel()">
                <i class="fa fa-download"></i> @GlobalMessages.Exportar Excel
            </button>
        }
        @if (Model.Id > 0 && !ViewBag.Novo)
        {
            if (Model.Situacao == SituacaoPontuacaoFidelidade.Rascunho)
            {
                <button id="btn_gerar" class="hidden btn btn-default"
                        onClick="Europa.Controllers.MatrizPontuacaoFidelidade.GerarPdf()">
                    <i class="fa fa-file"></i> @GlobalMessages.GerarPDF
                </button>
            }
        }

        @if (Model.Id > 0)
        {
            <button id="btn_download_pdf" class="btn btn-default"
                    onClick="Europa.Controllers.ModalDownloadPdfPontuacaoFidelidade.Abrir(@(Model.Id))">
                <i class="fa fa-download"></i> @GlobalMessages.Download @GlobalMessages.PDF
            </button>
        }
    </div>
</div>

<div class="col-md-24 matriz-page-content">
    <div id="dados_regra_comissao_padrao" class="col-md-24">
        @Html.HiddenFor(x => x.Id)
        <div class="col-md-2">
            @Html.Label(GlobalMessages.Regional + " *", new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Regional, new { @class = "form-control", onchange = "Europa.Controllers.MatrizPontuacaoFidelidade.OnRegionalChanged()", @readonly = true })
        </div>
        <div class="col-md-13 col-md-offset-1 descricao">
            @Html.Label(GlobalMessages.Descricao + " *", new { @class = "control-label" })
            @if (Model.Situacao != SituacaoPontuacaoFidelidade.Rascunho)
            {
                @Html.TextBoxFor(x => x.Descricao, new { @class = "form-control", maxlength = 255, @readonly = true })
            }
            else
            {
                @Html.TextBoxFor(x => x.Descricao, new { @class = "form-control", maxlength = 255 })
            }
        </div>
        <div class="col-md-3 col-md-offset-1">
            @Html.Label(GlobalMessages.TipoPontuacaoFidelidade)
            @Html.DropDownListFor(x => x.TipoPontuacaoFidelidade, EnumHelper.GetSelectList(typeof(TipoPontuacaoFidelidade)), new { @class = "form-control", maxlength = 255, disabled = true })
        </div>
        @if (Model.TipoCampanhaFidelidade.HasValue())
        {
            <div class="col-md-4 col-md-offset-1">
                @Html.Label(GlobalMessages.TipoCampanhaFidelidade)
                @Html.DropDownListFor(x => x.TipoCampanhaFidelidade, EnumHelper.GetSelectList(typeof(TipoCampanhaFidelidade)), new { @class = "form-control", maxlength = 255, disabled = true })
            </div>
        }
        <div class="col-md-3 col-md-offset-1">
            @Html.Label(GlobalMessages.Situacao)
            @Html.DropDownListFor(x => x.Situacao, EnumHelper.GetSelectList(typeof(SituacaoPontuacaoFidelidade)), new { @class = "form-control", maxlength = 255, disabled = true })
        </div>
    </div>
    <div id="vigencia" class="col-md-24">
        @if (Model.TipoPontuacaoFidelidade == TipoPontuacaoFidelidade.Campanha)
        {
            <div class="col-md-3 form-group">
                @Html.Label(GlobalMessages.InicioVigencia + " *", new { @class = "control-label" })
                @if ((Model.Situacao.IsEmpty() || Model.Situacao == SituacaoPontuacaoFidelidade.Rascunho) && habilitarEdicao)
                {
                    @Html.TextBoxFor(x => x.InicioVigencia, new { @class = "form-control", maxlength = 128, @datepicker = "datepicker", onchange = "Europa.Controllers.MatrizPontuacaoFidelidade.OnChangeInicioVigencia()" })
                }
                else if (Model.TipoPontuacaoFidelidade == TipoPontuacaoFidelidade.Campanha)
                {
                    @Html.TextBox("InicioVigencia", Model.InicioVigencia.Value.ToString(), new { @class = "form-control", @readonly = "readonly" })
                }
            </div>
            <div class="col-md-3 col-md-offset-1 form-group">
                @Html.Label(GlobalMessages.TerminoVigencia + " *", new { @class = "control-label" })
                @if ((Model.Situacao.IsEmpty() || Model.Situacao == SituacaoPontuacaoFidelidade.Rascunho) && habilitarEdicao)
                {
                    @Html.TextBoxFor(x => x.TerminoVigencia, new { @class = "form-control", maxlength = 128, @datepicker = "datepicker" })
                }
                else if (Model.TipoPontuacaoFidelidade == TipoPontuacaoFidelidade.Campanha)
                {
                    @Html.TextBox("TerminoVigencia", Model.TerminoVigencia.Value.ToString(), new { @class = "form-control", @readonly = "readonly" })
                }
            </div>
            if (Model.Progressao > 0)
            {
                <div class="col-md-1 col-md-offset-1">
                    @Html.Label(GlobalMessages.Progressao, new { @class = "control-label" })
                    @Html.TextBoxFor(x => x.Progressao, new { @class = "form-control", @readonly = "readonly" })
                </div>
                
                var qtde_minima = Json.Decode(Model.QuantidadesMinimas);
                <div class="col-md-6" style="margin-left:20px">
                    @foreach (var qtd in qtde_minima)
                    {
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => qtd, new { @class = "form-control col-md-1", type = "number", @readonly = true,style= "margin-top: 20px;" })
                        </div>
                    }
                </div>
            }           
        }
    </div>
    <div id="filtro_matriz" class="col-md-24">
        <div class="col-md-24">
            <div class="geenFieldSet">
                <div class="panel-heading">
                    <div>
                        <h3 class="panel-title pull-left">@GlobalMessages.Filtros</h3>
                        <div class="pull-right">
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            @Html.Label(GlobalMessages.Empreendimento)
            <select id="autocomplete_empreendimentos" class="select2-container form-control"></select>
        </div>
        <div class="pull-right" style="margin-top:20px">
            <button class="btn btn-default" title="@GlobalMessages.Filtrar" onClick="Europa.Controllers.MatrizPontuacaoFidelidade.AplicarFiltro()">
                <i class="fa fa-filter"></i> @GlobalMessages.Filtrar
            </button>
            <button class="btn btn-default" type="button" title="@GlobalMessages.Limpar" onClick="Europa.Controllers.MatrizPontuacaoFidelidade.LimparFiltro()">
                <i class="fa fa-eraser"></i> @GlobalMessages.Limpar
            </button>
        </div>
    </div>

    <div class="tabs-container col-md-24">
        <input type="radio" name="tabs" class="tabs" id="tab1" checked>
        <label for="tab1">@GlobalMessages.Fixa</label>
        <div style="padding-top: 0px;
            padding-left: 0px;
            padding-right: 0px;
            padding-bottom: 0px;">
            <div id="matriz_pontuacao_fidelidade" class="col-md-24">
            </div>
        </div>

        <input type="radio" name="tabs" class="tabs" id="tab2" checked>
        <label for="tab2">@GlobalMessages.Nominal</label>
        <div style="padding-top: 0px;
            padding-left: 0px;
            padding-right: 0px;
            padding-bottom: 0px;">
            <div id="matriz_pontuacao_fidelidade_nominal" class="col-md-24">
            </div>
        </div>
    </div>    
</div>

@{ 
    Html.RenderPartial("_ModalDownloadPdf");
}